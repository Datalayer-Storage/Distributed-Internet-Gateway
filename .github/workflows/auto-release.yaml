# Compares the version in package.json to tags on the repo. If the tag doesn't exist, a new tag is created, which
# then triggers the normal "on tag" release automation in the build job
name: Auto Tag

on:
  push:
    branches:
      - main

concurrency:
  group: main-release-check

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    steps:
      - name: Clean workspace
        uses: Chia-Network/actions/clean-workspace@main

      - name: Checkout current branch
        uses: actions/checkout@v3
        with:
          # Need PACKAGE_ADMIN_PAT token so when the tag is created, the tag automation runs
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          fetch-depth: 0
      
      - name: Set Git identity
        run: |
          git config --local user.email "automation@michaeltaylor.dev"
          git config --local user.name "Automation"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Versions
        run: |
          # Extract version from main branch's publish.ps1
          $mainVersionLine = Get-Content ${{ github.workspace }}/publish.ps1 | Select-String '^\$version = "([^"]+)"'
          $mainVersion = $mainVersionLine -replace '^\$version = "([^"]+)"', '$1'
          echo "Main version: $mainVersion"

          # Extract version from current branch's publish.ps1
          $branchVersionLine = Get-Content ${{ github.workspace }}/publish.ps1 | Select-String '^\$version = "([^"]+)"'
          $branchVersion = $branchVersionLine -replace '^\$version = "([^"]+)"', '$1'
          echo "Branch version: $branchVersion"
          
          # Compare versions
          if ($branchVersion -eq $mainVersion) {
            Write-Error "Version in publish.ps1 on this branch is not incremented. Version must increment for a merge to main."
            exit 1
          }
        shell: pwsh
  
