# Compares the version in package.json to tags on the repo. If the tag doesn't exist, a new tag is created, which
# then triggers the normal "on tag" release automation in the build job
name: Auto Tag

on:
  push:
    branches:
      - main

concurrency:
  group: main-release-check

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    steps:
      - name: Clean workspace
        uses: Chia-Network/actions/clean-workspace@main

      - name: Checkout current branch
        uses: actions/checkout@v3
        with:
          # Need PACKAGE_ADMIN_PAT token so when the tag is created, the tag automation runs
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          fetch-depth: 0
      
      - name: Set Git identity
        run: |
          git config --local user.email "automation@michaeltaylor.dev"
          git config --local user.name "Automation"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from publish.ps1
        run: |
          # Use grep to find the line containing '$version', then cut to extract the version value
          VERSION=$(grep '^\$version = ' publish.ps1 | cut -d '"' -f 2)
          echo "Extracted version: $VERSION"
          
          # Set the version as an output for other steps to use
          echo "VERSION=$VERSION" >> $GITHUB_ENV

          if [ $(git tag -l "$VERSION") ]; then
          echo "Tag exists, nothing to do"
          else
            echo "Tag does not exist. Creating and pushing tag"
            git tag $VERSION -m "Release $VERSION  $changes"
            git push origin $VERSION
          fi
        shell: bash